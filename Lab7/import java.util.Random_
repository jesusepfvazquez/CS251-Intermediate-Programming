import java.util.Random;

/**
 * @author Jesus Vazquez
 * HexMineManager
 */

public class HexMineManager extends Tests {

    piece[][] board;

    /**
     * Initializes the game
     * reset everything -> makes board ->calls your mine counter)
     * @param boardsize
     * @param minenumber
     */
    public HexMineManager(int boardsize, int minenumber){
        Random rand;

        board = new piece[boardsize][boardsize];

        for (int i = 0; i < boardsize; i ++){
            for (int j = 0; j < boardsize; j ++){
                
                // Making the odd rows blank
                if (i%2 != 0){
                    board[i][j] = "";
                }
                
            }
        }

        for (int i = 0; i < minenumber;){
            Random randcol = new Random();
            Random randrow = new Random();
            System.out.println(randrow);
            if (!board[randcol][randrow].mine){
                board[randcol][randrow].mine = true;
                i ++;
            }
        }
    }

    /**
     * Prints current state
     */
    void public boardprinter(){

    }

    /**
     * + adds numbers on surrounding mines)
     */
    void mineCounter(int board, int row, int col){
    }

    /**
     * if its 0 it uncovers all of the neighbors, if number it just flips it, if bomb -> end game
     */
    void pieceUncover(){
    }

    /**
     * flags on and flag off -> flags = no. bombs then win or lose
     */
    void bombflagger(){
    }
    
}    

